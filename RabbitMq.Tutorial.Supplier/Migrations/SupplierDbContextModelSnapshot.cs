// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RabbitMq.Tutorial.Supplier.Database;

namespace RabbitMq.Tutorial.Supplier.Migrations
{
    [DbContext(typeof(SupplierDbContext))]
    partial class SupplierDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("RabbitMq.Tutorial.Supplier.Database.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("RabbitMq.Tutorial.Supplier.Database.OrderLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderLine");
                });

            modelBuilder.Entity("RabbitMq.Tutorial.Supplier.Database.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e90581b2-3a0a-4dea-9f4f-2da6b2a60938"),
                            Name = "Mars",
                            Price = 10.0
                        },
                        new
                        {
                            Id = new Guid("a7adedc9-7e43-4ce9-a932-fa10a42eca5c"),
                            Name = "Snikers",
                            Price = 11.0
                        },
                        new
                        {
                            Id = new Guid("49a226e0-3991-4b09-bf11-af3dfae6d0d2"),
                            Name = "Twix",
                            Price = 12.0
                        },
                        new
                        {
                            Id = new Guid("1cd5a63f-392e-4429-91b2-7ca57daa11da"),
                            Name = "Milky Way",
                            Price = 9.0
                        },
                        new
                        {
                            Id = new Guid("d5cfc5f7-2034-4430-8a42-34bd1660491f"),
                            Name = "Alenka",
                            Price = 9.0
                        });
                });

            modelBuilder.Entity("RabbitMq.Tutorial.Supplier.Database.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("82b06d3e-90fc-4409-820b-b5383b5173e4"),
                            Name = "Hrusha's Goods"
                        },
                        new
                        {
                            Id = new Guid("531317c9-5457-40c5-8ef3-6358a38587df"),
                            Name = "Stepasha's Store"
                        },
                        new
                        {
                            Id = new Guid("321b19b5-bb14-419d-b429-db8ea0c4cd50"),
                            Name = "Karkushas's Marketplace"
                        });
                });

            modelBuilder.Entity("RabbitMq.Tutorial.Supplier.Database.WarehouseStockBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("WarehouseStockBalance");
                });

            modelBuilder.Entity("RabbitMq.Tutorial.Supplier.Database.Order", b =>
                {
                    b.HasOne("RabbitMq.Tutorial.Supplier.Database.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("RabbitMq.Tutorial.Supplier.Database.OrderLine", b =>
                {
                    b.HasOne("RabbitMq.Tutorial.Supplier.Database.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RabbitMq.Tutorial.Supplier.Database.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RabbitMq.Tutorial.Supplier.Database.WarehouseStockBalance", b =>
                {
                    b.HasOne("RabbitMq.Tutorial.Supplier.Database.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RabbitMq.Tutorial.Supplier.Database.Order", b =>
                {
                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
